{"ast":null,"code":"var _jsxFileName = \"C:\\\\catchAt\\\\catch_at\\\\catch_at\\\\frontend\\\\src\\\\components\\\\pages\\\\register\\\\register.js\";\nimport s from \"./register.module.css\";\nimport Header from \"../../shared/header/header\";\nimport { registration } from \"../../../actions/register\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  const validationSchema = yup.object().shape({\n    username: yup.string().required(\"Username is Necessary\"),\n    password: yup.string().required(\"Password is Necessary\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords are different\").required(\"Necessary\"),\n    keyword: yup.string().required(\"Keyword is Necessary\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        keyword: \"\"\n      },\n      validateOnBlur: true,\n      onSubmit: (values, {\n        setStatus\n      }) => {\n        registration(values.username, values.password, values.keyword, setStatus);\n      },\n      validationSchema: validationSchema,\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        isValid,\n        handleSubmit,\n        dirty,\n        status\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.content,\n        children: [status && status.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.error,\n          children: status.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this), status && status.ok && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: s.registration,\n          children: \" Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.error_username,\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.field_username,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"username\",\n            className: s.input,\n            required: true,\n            autoComplete: \"off\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.error_pass,\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.field_password,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            className: s.input,\n            required: true,\n            autoComplete: \"off\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: touched.confirmPassword && errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.error_confirm_pass,\n            children: errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.field_confirm_pass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"cofirm pass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            placeholder: \"password\",\n            className: s.input + \" \" + s.confirmPassword,\n            required: true,\n            autoComplete: \"off\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: touched.keyword && errors.keyword && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: s.error_key,\n            children: errors.keyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.field_key,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"keyword_\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"keyword\",\n            placeholder: \"keyword\",\n            className: s.input,\n            required: true,\n            autoComplete: \"off\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.keyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), isValid && dirty ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.register,\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.regButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.disButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Content;\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      buttonTwoName: \"Login\",\n      link: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Register;\nexport default Register;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"sources":["C:/catchAt/catch_at/catch_at/frontend/src/components/pages/register/register.js"],"names":["s","Header","registration","Formik","yup","Redirect","Content","validationSchema","object","shape","username","string","required","password","confirmPassword","oneOf","ref","keyword","values","setStatus","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","status","content","error","ok","error_username","field_username","input","error_pass","field_password","error_confirm_pass","field_confirm_pass","error_key","field_key","register","regButton","disButton","Register"],"mappings":"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","sourcesContent":["import s from \"./register.module.css\"\r\nimport Header from \"../../shared/header/header\"\r\nimport { registration } from \"../../../actions/register\"\r\nimport { Formik } from \"formik\"\r\nimport * as yup from \"yup\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n\r\nconst Content = () =>{\r\n    const validationSchema = yup.object().shape({\r\n        username: yup.string().required(\"Username is Necessary\"),\r\n        password: yup.string().required(\"Password is Necessary\"),\r\n        confirmPassword: yup.string().oneOf([yup.ref(\"password\")],\r\n         \"Passwords are different\")\r\n        .required(\"Necessary\"),\r\n        keyword: yup.string().required(\"Keyword is Necessary\")\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n            initialValues={{\r\n                username: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\",\r\n                keyword: \"\"\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values,{setStatus}) => \r\n               {registration(values.username,values.password ,values.keyword,setStatus)}\r\n            }\r\n            validationSchema={validationSchema}>\r\n                {({values, errors, touched, handleChange,\r\n                 handleBlur, isValid, handleSubmit, dirty, status}) =>(\r\n                    <div className= {s.content} >\r\n                \r\n                 {status && status.error && <p className={s.error}>{status.error}</p>}\r\n                 {status && status.ok && <Redirect to=\"login\" />}\r\n                        <h1 className={s.registration}> Registration</h1>\r\n                        <p>\r\n                            {touched.username && \r\n                            errors.username && \r\n                            <p className={s.error_username}>{errors.username}</p>}\r\n                        </p>\r\n                        <div className={s.field_username}>\r\n                            <label>username</label>\r\n                            <input\r\n                            type={\"text\"}\r\n                            name={\"username\"} \r\n                            placeholder=\"username\" \r\n                            className={s.input} \r\n                            required autoComplete=\"off\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.username} />\r\n                        </div>\r\n                        <p>\r\n                            {touched.password &&\r\n                             errors.password &&\r\n                            <p className={s.error_pass}>{errors.password}</p>}\r\n                        </p>\r\n                        <div className={s.field_password}>\r\n                            <label>password</label>\r\n                            <input \r\n                            type={\"password\"} \r\n                            name={\"password\"} \r\n                            placeholder=\"password\" \r\n                            className={s.input} \r\n                            required autoComplete=\"off\" \r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password} />\r\n                        </div>\r\n                        <p>\r\n                            {touched.confirmPassword && \r\n                            errors.confirmPassword && \r\n                            <p className={s.error_confirm_pass}>{errors.confirmPassword}</p>}\r\n                        </p>\r\n                        <div className={s.field_confirm_pass}>\r\n                            <label>cofirm pass</label>\r\n                            <input \r\n                            type={\"password\"} \r\n                            name={\"confirmPassword\"} \r\n                            placeholder=\"password\" \r\n                            className={s.input + \" \" + s.confirmPassword} \r\n                            required autoComplete=\"off\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.confirmPassword} />\r\n                        </div>\r\n                        <p>\r\n                            {touched.keyword && \r\n                            errors.keyword && \r\n                            <p className={s.error_key}>{errors.keyword}</p>}\r\n                        </p>\r\n                        <div className= {s.field_key}>\r\n                            <p>keyword_</p>\r\n                            <input \r\n                            type={\"text\" }\r\n                            name={\"keyword\"} \r\n                            placeholder=\"keyword\" \r\n                            className={s.input} \r\n                            required autoComplete=\"off\" \r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.keyword} />\r\n                        </div>\r\n                              \r\n                              \r\n                        {isValid && dirty ?\r\n                        <button\r\n                        type=\"submit\"\r\n                        className={s.register}\r\n                        onClick={handleSubmit}>\r\n                            <div className={s.regButton}></div>\r\n                        </button> \r\n                        : <div className={s.disButton}></div> }\r\n                                 \r\n                                \r\n                    </div>\r\n                )}\r\n\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Register = () =>{\r\n    return (\r\n        <div>\r\n        <Header buttonTwoName = \"Login\" link=\"/login\" />\r\n        <Content />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}