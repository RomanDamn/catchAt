{"ast":null,"code":"var _jsxFileName = \"C:\\\\catchAt\\\\catch_at\\\\catch_at\\\\frontend\\\\src\\\\components\\\\pages\\\\mainPage\\\\messagesPopup\\\\messagesPopup.js\",\n    _s = $RefreshSig$();\n\nimport s from \"./messagesPopup.module.css\";\nimport { css } from \"@emotion/css\";\nimport { w3cwebsocket } from \"websocket\";\nimport { useState, useRef, useEffect } from \"react\";\nimport MessageElement from \"./messageElement/MessageElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new w3cwebsocket('ws://127.0.0.1:9000');\n\nconst MessagesPopup = props => {\n  _s();\n\n  const [writingUser, setWritingUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const chatBarScroll = useRef();\n  const [senderId, setSenderId] = useState(1);\n  const [recipientId, setRecipientId] = useState(2); //Handle Enter Button in input area\n\n  const data = JSON.stringify({\n    type: \"message\",\n    msg: message,\n    user: writingUser\n  });\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter' && message) {\n      //&& data[data.length - 1].msg) {\n      client.send(data);\n    }\n  };\n\n  client.onopen = () => {\n    console.log(\"WebSocket Client COnnected\");\n  };\n\n  const scrollToBottom = () => {\n    chatBarScroll.current.scrollTop = chatBarScroll.current.scrollHeight;\n  };\n\n  client.onmessage = function (event) {\n    console.log(\"event.data =  \", event.data); // const data = JSON.parse(event.data)\n\n    setMessages([...messages, {\n      msg: event.data,\n      user: writingUser\n    }]);\n    scrollToBottom();\n  };\n\n  client.onopen();\n  useEffect(() => {\n    console.log('IN USE EFFECT');\n    fetch(\"http://localhost:8000/api/messages\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        senderId: senderId,\n        recipientId: recipientId\n      })\n    }).then(res => res.json()).then(data => Array.from(data).forEach(el => setMessages([...messages, {\n      msg: el.msg,\n      user: writingUser\n    }]))); // .then(res => res.foreach(el => {\n    //     console.log(el, \"------------element\");\n    //     setMessages([...messages, el])\n    // }))\n    //.then(res => setMessages([...messages, res]))\n\n    console.log(\"in end OF EFFECT\"); //console.log(messages, \"==========messages\")\n  }, [writingUser]); // const getMessages = async (senderId, recipientId) =>{\n  //     const getUserMessages = await fetch(\"http://localhost:8000/api/messages\", {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify({\n  //             senderId: senderId,\n  //             recipientId: recipientId\n  //         })\n  //     })\n  // }\n  // messages.forEach(el => console.log(el, \"current Messages in messsages\"))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ` ${s.content} ${props.active ? s.active : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.header,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: writingUser,\n        className: s.header__element,\n        onChange: e => setWritingUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.header__element,\n        children: \" DEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.header__element,\n        onClick: () => props.setActive(false),\n        children: \" X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatBarScroll,\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages__message,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__text,\n          children: \"How r u boooooooooooooooooooy?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__del,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages__message,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__text,\n          children: \"alive?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__del,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [s.messages__message, s.messages__message_your].join(' '),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__text,\n          children: \"yeaah, thanks, just hangover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__del,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages__message,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__text,\n          children: \"lol, consequences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__del,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: [s.messages__message, s.messages__message_your].join(' '),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__text,\n          children: \"I knew, I would be like this\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.messages__del,\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), messages && messages.map(mes => /*#__PURE__*/_jsxDEV(MessageElement, {\n        messages: mes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 50\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages__writingArea,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        className: s.messages__sendText,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messages__sendButton,\n        onClick: () => {\n          const data = JSON.stringify({\n            type: \"message\",\n            msg: message,\n            user: writingUser\n          });\n          {\n            message && client.send(data);\n          }\n        },\n        children: ['>', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessagesPopup, \"a8vgLNK2b9uufBiJ6KS93dRfJGY=\");\n\n_c = MessagesPopup;\nexport default MessagesPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesPopup\");","map":{"version":3,"sources":["C:/catchAt/catch_at/catch_at/frontend/src/components/pages/mainPage/messagesPopup/messagesPopup.js"],"names":["s","css","w3cwebsocket","useState","useRef","useEffect","MessageElement","client","MessagesPopup","props","writingUser","setWritingUser","message","setMessage","messages","setMessages","chatBarScroll","senderId","setSenderId","recipientId","setRecipientId","data","JSON","stringify","type","msg","user","handleKeyDown","event","key","send","onopen","console","log","scrollToBottom","current","scrollTop","scrollHeight","onmessage","fetch","method","headers","body","then","res","json","Array","from","forEach","el","content","active","header","header__element","e","target","value","setActive","messages__message","messages__text","messages__del","messages__message_your","join","map","mes","messages__writingArea","messages__sendText","messages__sendButton"],"mappings":"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","sourcesContent":["import s from \"./messagesPopup.module.css\";\r\nimport { css } from \"@emotion/css\"\r\nimport { w3cwebsocket } from \"websocket\"\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport MessageElement from \"./messageElement/MessageElement\";\r\n\r\nconst client = new w3cwebsocket('ws://127.0.0.1:9000');\r\n\r\nconst MessagesPopup = (props) => {\r\n    const [writingUser, setWritingUser] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messages, setMessages] = useState([]);\r\n    const chatBarScroll = useRef();\r\n\r\n    const [senderId, setSenderId] = useState(1)\r\n    const [recipientId, setRecipientId] = useState(2)\r\n\r\n\r\n\r\n    //Handle Enter Button in input area\r\n    const data = JSON.stringify({\r\n        type: \"message\",\r\n        msg: message,\r\n        user: writingUser\r\n    })\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter' && message) { //&& data[data.length - 1].msg) {\r\n            client.send(data)\r\n        }\r\n    }\r\n\r\n    client.onopen = () => {\r\n        console.log(\"WebSocket Client COnnected\");\r\n    };\r\n\r\n    const scrollToBottom = () => {\r\n        chatBarScroll.current.scrollTop = chatBarScroll.current.scrollHeight;\r\n    }\r\n\r\n    client.onmessage = function (event) {\r\n        console.log(\"event.data =  \", event.data);\r\n        // const data = JSON.parse(event.data)\r\n        setMessages([...messages, { msg: event.data, user: writingUser }]);\r\n        scrollToBottom()\r\n    }\r\n\r\n    client.onopen();\r\n    useEffect(() => {\r\n        console.log('IN USE EFFECT')\r\n        fetch(\"http://localhost:8000/api/messages\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                senderId: senderId,\r\n                recipientId: recipientId\r\n            })\r\n        }).then(res => res.json()\r\n        ).then(data => \r\n            Array.from(data).forEach(el => setMessages([...messages,{ msg: el.msg, user: writingUser }])))\r\n        // .then(res => res.foreach(el => {\r\n        //     console.log(el, \"------------element\");\r\n        //     setMessages([...messages, el])\r\n        // }))\r\n            //.then(res => setMessages([...messages, res]))\r\n            \r\n\r\n\r\n        console.log(\"in end OF EFFECT\")\r\n        //console.log(messages, \"==========messages\")\r\n    }, [writingUser]);\r\n    // const getMessages = async (senderId, recipientId) =>{\r\n    //     const getUserMessages = await fetch(\"http://localhost:8000/api/messages\", {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         body: JSON.stringify({\r\n    //             senderId: senderId,\r\n    //             recipientId: recipientId\r\n    //         })\r\n    //     })\r\n    // }\r\n   // messages.forEach(el => console.log(el, \"current Messages in messsages\"))\r\n    return (\r\n        <div className={` ${s.content} ${props.active ? s.active : \"\"}`} >\r\n            <div className={s.header}>\r\n                <input value={writingUser} className={s.header__element} onChange={e => setWritingUser(e.target.value)} />\r\n                <div className={s.header__element}> DEL</div>\r\n                <button className={s.header__element} onClick={() => props.setActive(false)}> X</button>\r\n            </div>\r\n            <div ref={chatBarScroll} className={s.messages}>\r\n                <div className={s.messages__message}>\r\n                    <div className={s.messages__text}>How r u boooooooooooooooooooy?</div>\r\n                    <div className={s.messages__del}>DEL</div>\r\n                </div>\r\n                <div className={s.messages__message}>\r\n                    <div className={s.messages__text}>alive?</div>\r\n                    <div className={s.messages__del}>DEL</div>\r\n                </div>\r\n                <div className={[s.messages__message, s.messages__message_your].join(' ')}>\r\n                    <div className={s.messages__text}>yeaah, thanks, just hangover</div>\r\n                    <div className={s.messages__del}>DEL</div>\r\n                </div>\r\n                <div className={s.messages__message}>\r\n                    <div className={s.messages__text}>lol, consequences</div>\r\n                    <div className={s.messages__del}>DEL</div>\r\n                </div>\r\n                <div className={[s.messages__message, s.messages__message_your].join(' ')}>\r\n                    <div className={s.messages__text}>I knew, I would be like this</div>\r\n                    <div className={s.messages__del}>DEL</div>\r\n                </div>\r\n                {messages && messages.map(mes => <MessageElement messages={mes} />)}\r\n            </div>\r\n\r\n            <div className={s.messages__writingArea}>\r\n                <input value={message} className={s.messages__sendText}\r\n                    onChange={e => setMessage(e.target.value)}\r\n                    onKeyDown={handleKeyDown} />\r\n                <div className={s.messages__sendButton} onClick={() => {\r\n                    const data = JSON.stringify({\r\n                        type: \"message\",\r\n                        msg: message,\r\n                        user: writingUser,\r\n                    })\r\n                    { message && client.send(data); }\r\n                }}>{'>'} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesPopup;"]},"metadata":{},"sourceType":"module"}